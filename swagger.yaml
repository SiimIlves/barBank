openapi: 3.0.2
info:
  title: Barbank2
  version: 1.0.0
paths:
  /users:
    summary: Path used to manage the list of users.
    description: >-
      The REST endpoint/path used to list and create zero or more `user` entities.  This path contains a
      `GET` and `POST` operation to perform the list and create tasks, respectively.
    post:
      requestBody:
        description: A new `user` to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
        required: true
      tags:
        - users
      responses:
        '201':
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Parameter(s) missing:
                  value:
                    error: some text
          description: user validation failed
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Username Already exists:
                  value:
                    error: Username Already exists
          description: Username already exists
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Parameter too short/long:
                  value:
                    error: >-
                      Path `(?<parameterName>.+)` \(`(?<sampleValue>.+)`\) is
                      (longer|shorter) than the (maximum|minimum) allowed length
                      \((?<requiredLength>\d+)\)
          description: Parameter(s) value too short/long
      operationId: createuser
      summary: Create a user
      description: Creates a new instance of a `user`.
  /sessions:
    post:
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
            examples:
              POST / session request:
                value:
                  username: bar
                  password: qwerty
        required: true
      tags:
        - session
      responses:
        '201':
          description: Working response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                '''Required parameter missing':
                  value:
                    error: '''Required parameter missing'
          description: '''Required parameter missing'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Invalid credentials:
                  value:
                    error: Invalid credentials
          description: Invalid credentials
      summary: Create a session
    delete:
      tags:
        - session
      responses:
        '204':
          description: Session successfully deleted
      security:
        -
          bearer: []
      summary: Delete session
  /users/current:
    get:
      tags:
        - users
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
              examples:
                GET /users/current response:
                  value:
                    accounts:
                      -
                        account_number: gbh0la6uvf47
                        balance: 10000
                        currency: euro
                        name: Main
                        userId: 61656517664531e5daff22ec
                    name: mees
                    username: mees2
          description: Successful request
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Invalid authorization format:
                  value:
                    error: Invalid authorization format
          description: Invalid authorization format
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Invalid Token:
                  value:
                    error: Invalid token
                Missing authorization:
                  value:
                    error: Missing authorization
          description: Invalid Token
      security:
        -
          bearer: []
      description: Returns active  `user` data
  /transactions:
    summary: Path used to manage the list of transactions.
    description: >-
      The REST endpoint/path used to list and create zero or more `transaction` entities.  This path
      contains a `GET` and `POST` operation to perform the list and create tasks, respectively.
    post:
      requestBody:
        description: A new `transaction` to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transaction'
        required: true
      tags:
        - transactions
      responses:
        '200':
          description: |
            Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Invalid amount:
                  value:
                    error: Invalid amount
          description: Invalid amount
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Missing authorization:
                  value:
                    error: Missing authorization
                Invalid token:
                  value:
                    error: Invalid token
          description: Missing authorization
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Account does not belong to a user:
                  value:
                    error: Account does not belong to a user
          description: Account does not belong to a user
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Destination bank not found:
                  value:
                    error: Destination bank not found
          description: Destination bank not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Not enough money on account:
                  value:
                    error: Not enough money on account
          description: Not enough money on account
      security:
        -
          bearer: []
      operationId: createtransaction
      summary: Create a transaction
      description: Creates a new instance of a `transaction`.
components:
  schemas:
    user:
      title: Root Type for user
      description: ''
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        name:
          type: string
      example:
        username: Miki
        password: qwertyqwerty
        name: Miki Hiir
    error:
      title: Root Type for error
      description: ''
      type: object
      properties:
        error:
          type: string
      example:
        error: some text
    Session:
      title: Root Type for Session
      description: ''
      type: object
      properties:
        token:
          type: string
      example:
        token: 616037440515e7a599aad56c
    transaction:
      title: Root Type for transaction
      description: ''
      type: object
      properties:
        accountFrom:
          type: string
        accountTo:
          type: string
        amount:
          format: int32
          type: integer
        currency:
          type: string
        explanation:
          type: string
      example:
        accountFrom: EEnme5rdmzd
        accountTo: '809'
        amount: 23
        currency: Doller
        explanation: Hello
  securitySchemes:
    bearer:
      scheme: bearer
      type: http
tags:
  -
    name: users
    description: ''
  -
    name: session
    description: ''
  -
    name: transactions
    description: ''
